diff --git a/config/BUILD.gn b/config/BUILD.gn
index 3927f0964..f33989e80 100644
--- a/config/BUILD.gn
+++ b/config/BUILD.gn
@@ -298,7 +298,7 @@ config("executable_config") {
 
   if (is_win) {
     configs += _windows_linker_configs
-  } else if (is_mac) {
+  } else if (is_mac && !use_zig_tc) {
     configs += [ "//build/config/mac:mac_dynamic_flags" ]
   } else if (is_ios) {
     configs += [
@@ -333,7 +333,7 @@ config("shared_library_config") {
 
   if (is_win) {
     configs += _windows_linker_configs
-  } else if (is_mac) {
+  } else if (is_mac && !use_zig_tc) {
     configs += [ "//build/config/mac:mac_dynamic_flags" ]
   } else if (is_ios) {
     configs += [
diff --git a/config/BUILDCONFIG.gn b/config/BUILDCONFIG.gn
index fcc7e1283..de582cae8 100644
--- a/config/BUILDCONFIG.gn
+++ b/config/BUILDCONFIG.gn
@@ -153,6 +153,18 @@ declare_args() {
   # DON'T ADD MORE FLAGS HERE. Read the comment above.
 }
 
+declare_args() {
+  use_zig_tc = false
+  cxx_use_ld = "ldd"
+  zig_cppflags = ""
+  zig_cxxflags = ""
+  zig_ldflags = ""
+  zig_asmflags = ""
+  v8_zig_cppflags = ""
+  v8_zig_cxxflags = ""
+  v8_zig_ldflags = ""
+}
+
 declare_args() {
   # Debug build. Enabling official builds automatically sets is_debug to false.
   is_debug = !is_official_build
@@ -415,7 +427,7 @@ if (is_win) {
     # that shouldn't use the windows subsystem.
     "//build/config/win:console",
   ]
-} else if (is_mac) {
+} else if (is_mac && !use_zig_tc) {
   _linker_configs = [ "//build/config/mac:strip_all" ]
 } else {
   _linker_configs = []
diff --git a/config/compiler/BUILD.gn b/config/compiler/BUILD.gn
index e45fa2c80..b518912ec 100644
--- a/config/compiler/BUILD.gn
+++ b/config/compiler/BUILD.gn
@@ -277,7 +277,7 @@ config("compiler") {
     }
   } else if (is_nacl) {
     configs += [ "//build/config/nacl:compiler" ]
-  } else if (is_mac) {
+  } else if (is_mac && !use_zig_tc) {
     configs += [ "//build/config/mac:compiler" ]
   } else if (is_ios) {
     configs += [ "//build/config/ios:compiler" ]
@@ -298,6 +298,11 @@ config("compiler") {
     ":compiler_deterministic",
   ]
 
+  if (use_zig_tc) {
+    # We'll provide the target flags from build.zig.
+    configs -= [ ":compiler_cpu_abi" ]
+  }
+
   # Here we enable -fno-delete-null-pointer-checks, which makes various nullptr
   # operations (e.g. dereferencing) into defined behavior. This avoids deletion
   # of some security-critical code: see https://crbug.com/1139129.
@@ -350,7 +355,7 @@ config("compiler") {
     }
 
     if (use_lld) {
-      ldflags += [ "-fuse-ld=lld" ]
+      ldflags += [ "-fuse-ld=${cxx_use_ld}" ]
       if (lld_path != "") {
         ldflags += [ "-B$lld_path" ]
       }
@@ -1384,7 +1389,9 @@ config("runtime_library") {
   } else if (is_ios) {
     configs += [ "//build/config/ios:runtime_library" ]
   } else if (is_mac) {
-    configs += [ "//build/config/mac:runtime_library" ]
+    if (!use_zig_tc) {
+      configs += [ "//build/config/mac:runtime_library" ]
+    }
   } else if (is_android) {
     configs += [ "//build/config/android:runtime_library" ]
   }
diff --git a/config/linux/BUILD.gn b/config/linux/BUILD.gn
index 2137ed81d..4014edee2 100644
--- a/config/linux/BUILD.gn
+++ b/config/linux/BUILD.gn
@@ -43,7 +43,10 @@ config("runtime_library") {
   if ((!(is_chromeos_ash || is_chromeos_lacros) ||
        default_toolchain != "//build/toolchain/cros:target") &&
       (!use_custom_libcxx || current_cpu == "mipsel")) {
-    libs = [ "atomic" ]
+    if (!use_zig_tc) {
+      # -latomic won't be found when using zig tc, it's already compiled from zig libcxx source
+      libs = [ "atomic" ]
+    }
   }
 }
 
diff --git a/config/sysroot.gni b/config/sysroot.gni
index 18d2d5736..0b1689b7d 100644
--- a/config/sysroot.gni
+++ b/config/sysroot.gni
@@ -67,7 +67,7 @@ if (sysroot == "") {
                       "string") == "True",
           "Missing sysroot ($sysroot). To fix, run: build/linux/sysroot_scripts/install-sysroot.py --arch=$_script_arch")
     }
-  } else if (is_mac) {
+  } else if (is_mac && !use_zig_tc) {
     import("//build/config/mac/mac_sdk.gni")
     sysroot = mac_sdk_path
   } else if (is_ios) {
diff --git a/toolchain/gcc_toolchain.gni b/toolchain/gcc_toolchain.gni
index 25d9010ea..38230f2f9 100644
--- a/toolchain/gcc_toolchain.gni
+++ b/toolchain/gcc_toolchain.gni
@@ -357,7 +357,11 @@ template("gcc_toolchain") {
     tool("cc") {
       depfile = "{{output}}.d"
       precompiled_header_type = "gcc"
-      command = "$cc -MMD -MF $depfile ${rebuild_string}{{defines}} {{include_dirs}} {{cflags}} {{cflags_c}}${extra_cppflags}${extra_cflags} -c {{source}} -o {{output}}"
+      if (use_zig_tc) {
+        command = "$cc ${rebuild_string}{{defines}} {{include_dirs}} {{cflags}} {{cflags_c}}${extra_cppflags}${extra_cflags} -c {{source}} -o {{output}}"
+      } else {
+        command = "$cc -MMD -MF $depfile ${rebuild_string}{{defines}} {{include_dirs}} {{cflags}} {{cflags_c}}${extra_cppflags}${extra_cflags} -c {{source}} -o {{output}}"
+      }
       depsformat = "gcc"
       description = "CC {{output}}"
       outputs = [ "$object_subdir/{{source_name_part}}.o" ]
@@ -366,7 +370,11 @@ template("gcc_toolchain") {
     tool("cxx") {
       depfile = "{{output}}.d"
       precompiled_header_type = "gcc"
-      command = "$cxx -MMD -MF $depfile ${rebuild_string}{{defines}} {{include_dirs}} {{cflags}} {{cflags_cc}}${extra_cppflags}${extra_cxxflags} -c {{source}} -o {{output}}"
+      if (use_zig_tc) {
+        command = "$cxx ${rebuild_string}{{defines}} {{include_dirs}} {{cflags}} {{cflags_cc}}${extra_cppflags}${extra_cxxflags} -c {{source}} -o {{output}}"
+      } else {
+        command = "$cxx -MMD -MF $depfile ${rebuild_string}{{defines}} {{include_dirs}} {{cflags}} {{cflags_cc}}${extra_cppflags}${extra_cxxflags} -c {{source}} -o {{output}}"
+      }
       depsformat = "gcc"
       description = "CXX {{output}}"
       outputs = [ "$object_subdir/{{source_name_part}}.o" ]
@@ -375,7 +383,11 @@ template("gcc_toolchain") {
     tool("asm") {
       # For GCC we can just use the C compiler to compile assembly.
       depfile = "{{output}}.d"
-      command = "$asm -MMD -MF $depfile ${rebuild_string}{{defines}} {{include_dirs}} {{asmflags}}${extra_asmflags} -c {{source}} -o {{output}}"
+      if (use_zig_tc) {
+        command = "$asm ${rebuild_string}{{defines}} {{include_dirs}} {{asmflags}}${extra_asmflags} -c {{source}} -o {{output}}"
+      } else {
+        command = "$asm -MMD -MF $depfile ${rebuild_string}{{defines}} {{include_dirs}} {{asmflags}}${extra_asmflags} -c {{source}} -o {{output}}"
+      }
       depsformat = "gcc"
       description = "ASM {{output}}"
       outputs = [ "$object_subdir/{{source_name_part}}.o" ]
@@ -389,7 +401,11 @@ template("gcc_toolchain") {
       } else {
         rspfile = "{{output}}.rsp"
         rspfile_content = "{{inputs}}"
-        command = "\"$ar\" {{arflags}} -r -c -s -D {{output}} @\"$rspfile\""
+        if (use_zig_tc) {
+          command = "$ar {{arflags}} -r -c -s -D {{output}} @\"$rspfile\""
+        } else {
+          command = "\"$ar\" {{arflags}} -r -c -s -D {{output}} @\"$rspfile\""
+        }
       }
 
       # Remove the output file first so that ar doesn't try to modify the
